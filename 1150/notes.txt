5 2
0 6 14 20 21
6 8 6 1
6+6, 8+1
9

6 2
0 6 14 20 21 30
6 8 6 1 9
9 8 6 6 1
9 -> /
6 8 6 1 /
6+6, 8+1
9

5 2
1 3 4 6 12
1 2 2 6
2 1 2 6
2+2, 1+6
4
4

10 4
1 3 4 6 10 13 18 26 29 31
2 1 2 4 3 5 8 3 2
8 5 4 3 3 2 2 2 1
8 -> /
2   1   2   4   3   5  /  3   2  >>>>>> 2 area
2+2+3, 1+4+5 / 3, 2
7, 10 / 3, 2
7, 2
9

10 3
1 3 4 6 10 13 18 26 29 31
2 1 2 4 3 5 8 3 2
8 5 4 3 3 2 2 2 1
8, 5, 4 -> /
2 1 2 / 3 / / 3 2 >>>>>> 3 area
1, 4 / 1: 3, 4: 0 / 3, 2
4 / 3, 2
4 / 2
6

10 2
0 3 4 6 10 13 18 26 29 31
3 1 2 4 3 5 8 3 2
8 5 4 3 3 3 2 2 1
8, 5, 4, 3, 3 -> /
  1 2 /   / /   2
/ 1 2 / / / / 3 2 -> 2 area, 1, 2 / 3, 2 -> 1 / 3 -> 4
3 1 2 / / / / / 2 -> 2 area, 3+2, 1 / 2 -> 3
/ 1 2 / 3 / / / 2 -> 3 area, 1, 2 / 3 / 2 -> 1 / 3 / 2 -> 1 / 2 -> 3
3

22 4
0 2 8 17 22 28 33 34 41 45 48 50 52 58 66 80 82 86 89 90 93 99
2 6 9 5 6 5 1 7 4 3 2 2 6 8 14 2 4 3 1 3 6
14 9 8 7 6 6 6 6 5 5 4 4 3 3 3 2 2 2 2 1 1
14 9 8 7 6 6 6 6 5 5 4 4 3 -> /
2 / / / / / 1 / /   2 2 / / /  2 /   1   6
2 / / / / / 1 / / / 2 2 / / /  2 / 3 1 3 6 -> 2 / 1 / 2, 2 / 2 / 3+3, 1+6 -> 2 / 1 / 2 / 2 / 6, 7 -> 2 / 1 / 2 / 2 -> 7
2 / / / / / 1 / / 3 2 2 / / /  2 / / 1 3 6 -> 2 / 1 / 3+2, 2 / 2 / 1+6, 3 -> 2 / 1 / 2 / 2 / 7, 3 -> 2 / 1 / 2 / 2 -> 7
2 / / / / / 1 / / 3 2 2 / / /  2 / 3 1 / 6 -> 2 / 1 / 3+2, 2 / 3, 1 / 6 ->  2 / 1 / 2 / 1 / 6 -> 2 / 1 / 2 / 1 -> 6
6

1. Get list size and 'B'
2. Get list data
3. Calculate distance of each list data (dist[i] = list[i + 1] - list[i])
4. Divide the region based on the index when dist element is (distlist size - 'B' * 2)-greatest data
5. Split every case if 